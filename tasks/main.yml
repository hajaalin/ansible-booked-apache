---
# tasks file for role "booked"

- include: "setup-{{ ansible_os_family }}.yml"

- name: create archive directory
  file: path="{{ booked_archive_dir }}" state=directory owner="{{ booked_apache_user }}" group="{{ booked_apache_user }}" mode=0700
- name: archive existing installation
  shell: tar cf "{{ booked_archive_dir }}/booked_`date +%Y%m%d%H%M`.tar" "{{ booked_install_dir }}"

- name: remove existing installation
  file: path="{{ booked_install_dir }}" state=absent

- name: create install directory
  file: path="{{ booked_install_dir }}" state=directory owner="{{ booked_apache_user }}" group="{{ booked_apache_user }}" mode=0700
- name: create log directory
  file: path="{{ booked_log_dir }}" state=directory owner="{{ booked_apache_user }}" group="{{ booked_apache_user }}" mode=0775

- block:
  - fail:
      msg: "booked_source_local_archive is empty"
    when: booked_source_local_archive == ""
  - name: unpack local source archive
    unarchive: src="{{ booked_source_local_archive }}" dest=/tmp
  - name: move source to installation directory
    shell: mv /tmp/booked/* "{{ booked_install_dir }}"
  when: booked_source == "local_archive"

- block:
  - fail:
      msg: "booked_source_local_dir is empty"
    when: booked_source_local_dir == ""
  - name: copy source from local directory
    synchronize: src="{{ booked_source_local_dir }}" dest="{{ booked_install_dir }}"
  when: booked_source == "local_directory"

- block:
  - name: get source from Git
    git: repo="{{ booked_source_git_repo }}" version="{{ booked_source_git_version }}" dest="{{ booked_install_dir }}" accept_hostkey=yes ssh_opts="-o UserKnownHostsFile={{ booked_source_git_known_hosts_file }}"
  when: booked_source == "git"


- name: template Booked config file
  template: src=config.php dest="{{ booked_install_dir }}/config/config.php"

- name: template Booked log config file
  template: src=log4php.config.xml dest="{{ booked_install_dir }}/config/log4php.config.xml"

- name: create .htaccess file
  shell: echo "DirectoryIndex index.php" > "{{ booked_install_dir }}/.htaccess"
  args:
    creates: "{{ booked_install_dir }}/.htaccess"

- name: fix ownership of installation directory
  file: path="{{ booked_install_dir }}" recurse=yes owner="{{ booked_apache_user }}" group="{{ booked_apache_user }}"
